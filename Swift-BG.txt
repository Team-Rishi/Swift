Суифт е нов език за програмиране за iOS и OS X приложения, който е изграден на основата на С и Objective-C, но без ограниченията за съвместимост на С. Суифт наследява сигурни програмнни образци и добавя модерни опции за да направи програмирането по-лесно, по-гъвкаво и по-забавно. Чистата основа на Суифт, подкрепена от доста харесваните Cocoa и Cocoa Touch frameworks, е възможност да си представим наново как софтуерното програмиране работи.

Суифт се очакваше да се направи от години. Apple положи основите на езика като подобри съществуващия вече компилатор, дебъгер и софтуерна рамка. Опростено е управлението на паметта с Automatic Reference Counting (ARC). Софтуерната рамка, изградена на солидната основа на Cocoa и Foundation, е модернизирана и стандартизирана изцяло. Самият Objective-C е еволюирал да поддържа блокове, колекционни литерали и модули, позволявайки на софтуерната рамка да наследи безпроблемно модерните езикови технологии. Благодарение на тази основа, сега може да се представи нов език за бъдещето на софтуерното развитие на Apple.

На разработчиците на Objective-C Суифт се струва познат. Той наследява от Objective-C четимостта на именуваните параметри и мощта на динамичния му обектен модел. Дава гладък достъп до съществуващите софтуерни рамки на Cocoa и позволява съвместно опериране с Objective-C код. Надграждайки над тези общи основи, Суифт представя много нови допълнения и обединява процедурните и обектно-ориентирани части на езика.

Суифт е доста приятелски настроен към новите програмисти. Той е първият програмен език за системи за индустриално качество, който е толкова изразителен и забавен колкото скриптов език. Поддържа иновативна опция, която позволява на програмистите да експериментират със Суифт код и да виждат резултатите веднага без да се налага да изработват и стартират приложение.

Суифт комбинира най-доброто от модерното езиково мислене с мъдростта на широко-скроените инжинери от Apple. Компилатора е оптимизиран за по-добро изпълнение, а езика е оптимизиран за по-добра разработка без двете да си пречат взаимно. Суифт е фантастичен начин да се пишат iOS и OS X приложения и ще продължи да се развива с нови опции и възможности.

Суифт е резултата от последните разработки в сферата на програмните езици. Именувани параметри взаимствани от Objective-C са изразени чрез иновативен синтаксис, което прави APIs и Суифт дори по-лесни за четене и поддръжка.
	var sortedStrings = sorted(stringArray) {
	$0.uppercaseString < $1.uppercaseString
	}

Подразбиращите се типове правят кода по-чист и вероятността за грешки по-малка. Модулите елиминарат header-ите и ги заменят с namespace-и. Паметта се управлява автоматично и дори не се налага да се пише точка и запетая.

Суифт предоставя много други опции за подобряване на кода:
•Closures unified with function pointers
•Tuples and multiple return values
•Generics
•бърза и сбита итерация по колекция или рейндж
•структури, които поддържат методи, разширения и протоколи
•функционални програмни модели

Playgrounds (игрищата) опростяват изключително писането на код на Суифт. Когато се напише един ред код, резултатът се показва веднага. Ако кодът използва цикъл, прогресът може да се наблюава чрез timeline assistant (асистент по времевата ос). Времевата ос показва променливите в графика, рисува всяка стъпка и може да покаже анимирана SpriteKit сцена. Когато кодът в Playground е осъвършенстван, просто се премества в проекта. Ето някой типични ползи от Playground:
- проектиране на нов алгоритъм гледайки резултатите на всяка стъпка
- създаване на нови тестове и потвърждаване, че работят, преди да бъдат изпозвани
- експериментиране с APIs за подобрение на уменията на програмиране със Суифт

Read-Eval-Print-Loop (REPL). Конзолата за дебъгване в Xcode съдържа интерактивна жградена версия на Суифт езика. Използва се синтаксиса на Суифт за да се оцени и взаимодейства с работещите приложения, или за да се пише нов код и да се види как работи в скриптова среда. Дебъгера е достъпен от Xcode конзолата или от терминала.

Суифт премахва цели класове от несигурен код. Променливите винаги се инициализират преди употреба, масивите и целите числа се проверяват за препълване, паметта се управлява автоматично. Синтаксисът е настроен за олеснение - например прости трибуквени думи дефинират променлива (var) или константа (let).

Суифт е направен за да бъде бърз - използвайки изключително бързия компилатор LLVM Суифт кодът се трансформира в оптимизиран местен код, настроен да изпозва максимума от хардуера, на който работи. Синтаксиса и стандартните библиотеки също са настроени да оптимизират изпълнението на кода.

Суифт е наследник на Objective-C езиците. Той включва примитивни типове данни, оператори, управление на потока. Също предоствя обектно-ориентирани опции като класове, протоколи и generics.

